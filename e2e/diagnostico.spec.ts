import { test, expect } from '@playwright/test';

/**
 * üé≠ TESTE E2E - DIAGN√ìSTICO
 * 
 * Teste end-to-end completo do fluxo de diagn√≥stico.
 * Simula intera√ß√£o real do usu√°rio.
 */

test.describe('Diagn√≥stico E2E', () => {
  test.beforeEach(async ({ page }) => {
    // Navegar para a p√°gina de diagn√≥stico
    await page.goto('/diagnostico');
    
    // Aguardar carregamento da p√°gina
    await page.waitForLoadState('networkidle');
  });

  test('deve completar fluxo de diagn√≥stico completo', async ({ page }) => {
    // Step 1: Selecionar setor
    await expect(page.locator('h2')).toContainText('Qual √© o setor da sua empresa?');
    
    // Selecionar setor "Manufatura"
    await page.click('text=Manufatura');
    await page.click('button[type="submit"]');
    
    // Step 2: Selecionar porte
    await expect(page.locator('h2')).toContainText('Qual √© o porte da sua empresa?');
    
    // Selecionar porte "M√©dia"
    await page.click('text=M√©dia');
    await page.click('button[type="submit"]');
    
    // Step 3: Selecionar m√≥dulos
    await expect(page.locator('h2')).toContainText('Quais m√≥dulos voc√™ precisa?');
    
    // Selecionar m√≥dulos
    await page.check('input[value="ERP"]');
    await page.check('input[value="CRM"]');
    await page.check('input[value="Analytics"]');
    
    await page.click('button[type="submit"]');
    
    // Step 4: Selecionar dores
    await expect(page.locator('h2')).toContainText('Quais s√£o suas principais dores?');
    
    // Selecionar dores
    await page.check('input[value="Gest√£o de estoque"]');
    await page.check('input[value="Controle financeiro"]');
    await page.check('input[value="Relat√≥rios"]');
    
    await page.click('button[type="submit"]');
    
    // Step 5: Dados de contato
    await expect(page.locator('h2')).toContainText('Vamos conversar sobre sua empresa?');
    
    // Preencher dados de contato
    await page.fill('input[name="nome"]', 'Jo√£o Silva');
    await page.fill('input[name="email"]', 'joao@exemplo.com');
    await page.fill('input[name="telefone"]', '(11) 99999-9999');
    await page.fill('input[name="empresa"]', 'Empresa Teste LTDA');
    
    // Adicionar observa√ß√µes
    await page.fill('textarea[name="observacoes"]', 'Precisamos de uma solu√ß√£o completa para nossa empresa.');
    
    // Submeter formul√°rio
    await page.click('button[type="submit"]');
    
    // Verificar redirecionamento para p√°gina de sucesso
    await expect(page).toHaveURL('/diagnostico/sucesso');
    await expect(page.locator('h1')).toContainText('Diagn√≥stico Enviado!');
  });

  test('deve validar campos obrigat√≥rios', async ({ page }) => {
    // Step 1: Tentar avan√ßar sem selecionar setor
    await page.click('button[type="submit"]');
    
    // Deve mostrar erro ou n√£o avan√ßar
    await expect(page.locator('h2')).toContainText('Qual √© o setor da sua empresa?');
    
    // Selecionar setor e avan√ßar
    await page.click('text=Manufatura');
    await page.click('button[type="submit"]');
    
    // Step 2: Tentar avan√ßar sem selecionar porte
    await page.click('button[type="submit"]');
    
    // Deve mostrar erro ou n√£o avan√ßar
    await expect(page.locator('h2')).toContainText('Qual √© o porte da sua empresa?');
  });

  test('deve permitir navega√ß√£o entre steps', async ({ page }) => {
    // Step 1: Selecionar setor
    await page.click('text=Manufatura');
    await page.click('button[type="submit"]');
    
    // Step 2: Voltar para step anterior
    await page.click('button:has-text("Voltar")');
    
    // Deve voltar para step 1
    await expect(page.locator('h2')).toContainText('Qual √© o setor da sua empresa?');
    
    // Verificar se a sele√ß√£o foi mantida
    await expect(page.locator('text=Manufatura')).toBeVisible();
  });

  test('deve mostrar progresso correto', async ({ page }) => {
    // Step 1: Verificar progresso inicial
    await expect(page.locator('[data-testid="progress"]')).toContainText('1 de 5');
    
    // Avan√ßar para step 2
    await page.click('text=Manufatura');
    await page.click('button[type="submit"]');
    
    // Verificar progresso atualizado
    await expect(page.locator('[data-testid="progress"]')).toContainText('2 de 5');
  });

  test('deve funcionar em dispositivos m√≥veis', async ({ page }) => {
    // Simular viewport m√≥vel
    await page.setViewportSize({ width: 375, height: 667 });
    
    // Step 1: Selecionar setor
    await page.click('text=Manufatura');
    await page.click('button[type="submit"]');
    
    // Step 2: Selecionar porte
    await page.click('text=M√©dia');
    await page.click('button[type="submit"]');
    
    // Verificar se a interface est√° responsiva
    await expect(page.locator('h2')).toBeVisible();
    await expect(page.locator('button[type="submit"]')).toBeVisible();
  });

  test('deve lidar com erros de rede', async ({ page }) => {
    // Interceptar requisi√ß√µes e simular erro
    await page.route('**/api/leads', route => {
      route.fulfill({
        status: 500,
        contentType: 'application/json',
        body: JSON.stringify({ error: 'Internal Server Error' }),
      });
    });
    
    // Completar fluxo at√© o final
    await page.click('text=Manufatura');
    await page.click('button[type="submit"]');
    
    await page.click('text=M√©dia');
    await page.click('button[type="submit"]');
    
    await page.check('input[value="ERP"]');
    await page.click('button[type="submit"]');
    
    await page.check('input[value="Gest√£o de estoque"]');
    await page.click('button[type="submit"]');
    
    // Preencher dados de contato
    await page.fill('input[name="nome"]', 'Jo√£o Silva');
    await page.fill('input[name="email"]', 'joao@exemplo.com');
    await page.fill('input[name="telefone"]', '(11) 99999-9999');
    await page.fill('input[name="empresa"]', 'Empresa Teste LTDA');
    
    // Tentar submeter
    await page.click('button[type="submit"]');
    
    // Deve mostrar mensagem de erro
    await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
  });
});
